# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                                           #
# INPUT                                                                                     #
#                                                                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# URL to a .jar or .war file
input.files = https://repo1.maven.org/maven2/com/microsoft/sqlserver/mssql-jdbc/7.4.1.jre8/mssql-jdbc-7.4.1.jre8.jar

# Skip scan if already exists an jQAssistant database. Default is false
 input.skip_scan = true

# Name of the visualization or the visualized system
# input.name = default

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                                           #
# OUTPUT                                                                                    #
#                                                                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Output format of the generated visualization
# Possible values are aframe (default), x3d
output.format = aframe

# Visualization metaphor of the generated visualization
# Possible value ard rd (default), city
metaphor = rd

# Directory to which the visualization will be generated, relative to the directory of this project
# By default, the visualization is available to the UI, so do not change this unless you know what you are doing!
# output.path = /var/lib/jetty/data-gen/

# If true, the x3d files is converted to multipart automatically, if InstantPlayer is installed locally
# convert_to_multipart = false

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                                           #
# CITY VISUALIZATION                                                                        #
#                                                                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Possible values are original (default), panels, bricks, floor
# city.building_type = original

# The active mode to structure and color the methods and attributes.
# Possible values are 
# types (default): The class elements are sorted and colored associated to type/functionality of the method.
# visibility: The class elements are sorted and colored corresponding to their visibility modifiers.
# city.scheme = types

# Switch to control the elements of the classes to show.
# Possible values are methods_and_attributes (default), methods_only, attributes_only
# city.class_elements_mode = methods_and_attributes

# Possible values are methods_first (default), unsorted, attributes_first
# city.class_elements_sort_mode_coarse = methods_first

# The active mode, how to sort the methods or attributes separately among each other
# This means a method is only compared to another method and an attribute is only
# compared to another attribute in this comparison, according to their values.
# If it is set to scheme, a secondary sorting is performed to place methods 
# with high numbers of statements at the bottom.
# Possible values are scheme (default), unsorted, alphabetically, nos
# city.class_elements_sort_mode_fine = scheme

# If set true, the order of the sorting, defined in class_elements_sort_mode_fine is reversed.
# If class_elements_sort_mode_fine is set to scheme, a secondary sorting is performed to place 
# methods with high numbers of statements at the bottom. This behaviour is not influenced by this switch.
# city.class_elements_sort_mode_fine_direction_reversed = false

# Switch to show or hide building base in panels or bricks mode.
# If set to false, only districts and buildingSegments are visible.
# city.show_building_base = true

# Switch for showing attributes as cylinders instead of boxes.
# This setting has only an affect in panels-mode.
# city.show_attributes_as_cylinders = true

# The active mode for the layout of the bricks/methods.
# This setting has only an affect in brick-mode.
# Possible values are progressive (default), straight, balanced 
# city.brick.layout = progressive
# city.brick.size = 1.0
# city.brick.horizontal_margin = 0.5 
# city.brick.horizontal_gap = 0.2
# city.brick.vertical_margin = 0.2
# city.brick.vertical_gap = 0.2

# The active mode for the area between panels/methods.
# Possible values are 
# separator (default): Between the panels separators are placed with a fixed height and color.
# none: No space between the panels and they are placed on top of each other.
# gap: The panels have a free space between them and do not touch each other.
# city.panel.separator_mode = separator
city.panel.separator_mode = separator

# Multiplier for height of a panel, declared in panel.height_unit. The elements of this array 
# are threshold values for the number of statements inside the method and are multiplied with the 
# index+1, so the product will be the actual height of the panel.
# The values are inclusive.
# Comment property out to use default value (is 3, 6, 12, 24, 48, 96, 144, 192, 240)
# city.panel.height_treshold_nos = 3, 6, 12, 24, 48, 96, 144, 192, 240

## Measurements Panels

# Height is multiplied by city.panel.height_treshold_nos 
# city.panel.height_unit = 0.5

# city.panel.horizontal_margin = 0.5
# city.panel.vertical_margin = 0.25
# city.panel.vertical_gap = 0.125
# city.panel.separator_height = 0.125

# Possible values are none (default) and nos
# city.original_building_metric = none

# city.width_min = 1
# city.height_min = 1
# city.building.horizontal_margin = 3.0
# city.building.horizontal_gap = 3.0
# city.building.vertical_margin = 1.0

# city.package.color_start = #969696
# city.package.color_end = #f0f0f0 
# city.class.color_start = #131615
# city.class.color_end = #00ff00
# city.class.color = #353559

# city.color.blue = #99FFCC
# city.color.aqua = #99CCFF
# city.color.light_green = #CCFF99
# city.color.dark_green = #99FF99
# city.color.yellow = #ffff99
# city.color.orange = #FFCC99
# city.color.red = #FF9999
# city.color.pink = #FF99FF
# city.color.violet = #9999FF
# city.color.light_grey = #CCCCCC
# city.color.dark_grey = #999999
# city.color.white = #FFFFFF
# city.color.black = #000000


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                                           #
# RECURSIVE DISK VISUALIZATION                                                              #
#                                                                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# rd.data_factor = 4.0
# rd.height = 1.0
# rd.ring_width = 2.0
# rd.ring_width_ad = 0
# rd.min_area = 10.0
# rd.namespace_transparency = 0
# rd.class_transparency = 0
# rd.method_transparency = 0
# rd.data_transparency = 0
# rd.color.class = #353559
# rd.color.data = #fffc19
# rd.color.method = #1485cc
# rd.color.namespace = #969696

# If true the Methods will be visualized as Disks instead of DiskSegments.
# rd.method_disks = false

# If true Attributes will be visualized as disks.
# rd.data_disks = false

# If true visualization will be based on the method type
# rd.method_type_mode = false
